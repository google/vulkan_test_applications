/* Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#version 430
#include "particle_data_shared.h"

layout (local_size_x = COMPUTE_SHADER_LOCAL_SIZE, local_size_y = 1, local_size_z = 1) in;

layout (binding = 1) buffer SimulationData {
  simulation_data simulation[TOTAL_PARTICLES];
};

layout (binding = 2) buffer DrawData {
  draw_data draw[TOTAL_PARTICLES];
};

layout (binding = 0) buffer time_data {
    float frame_number;
    float timeData[1];
};

// This is going to be REALLY inefficient once we
// actually try to do the n-body.
void main() {
  uint index = gl_GlobalInvocationID.x;
  float time = timeData[0];
  simulation_data sim = simulation[index];
  sim.position_velocity.xy += sim.position_velocity.zw * time;
  simulation[index] = sim;
  draw_data d;
  d.position_speed = sim.position_velocity;
  draw[index] = d;
}
